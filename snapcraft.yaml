name: core-splash20
base: core20
version: '0.1'
summary: Snap with bits to support splash screen on UC
description: |
  This snap contains the bits needed to support splash screen on UC. The
  expected usage is by staging it from the core20 snap. Ideally, all the
  moving parts will be eventually upstreamed and it will be possible to
  simply stage packages to the core snap instead of using this snap.

grade: stable
confinement: strict

parts:

  # We stage the packages that we are going to compile so
  # 1. We get the copyright in the usual way
  # 2. We ensure that the packages appear as primed in the manifest so
  #    we can get CVE notifications for them.
  copyright:
    plugin: nil
    stage-packages:
      - plymouth
      - libpango-1.0-0
    stage:
      - usr/share/doc/libdatrie1/
      - usr/share/doc/libfontconfig1/
      - usr/share/doc/libfreetype6/
      - usr/share/doc/libfribidi0/
      - usr/share/doc/libharfbuzz0b/
      - usr/share/doc/libpango-1.0*/
      - usr/share/doc/libplymouth5/
      - usr/share/doc/libthai0/
      - usr/share/doc/plymouth/

  pango-static:
    plugin: meson
    source: https://git.launchpad.net/ubuntu/+source/pango1.0
    source-type: git
    source-branch: applied/ubuntu/focal
    build-packages:
      - fonts-cantarell
      - gnome-pkg-tools
      - gobject-introspection
      - gtk-doc-tools
      - help2man
      - libcairo2-dev
      - libfontconfig1-dev
      - libfreetype6-dev
      - libfribidi-dev
      - libgirepository1.0-dev
      - libglib2.0-dev
      - libharfbuzz-dev
      - libthai-dev
      - libx11-dev
      - libxft-dev
      - libxrender-dev
      - libxt-dev
      - locales
      - meson
      - perl
      - pkg-config
    meson-parameters:
      - -Ddefault_library=both
    prime:
      - -*

  plymouth:
    after: [ pango-static ]
    plugin: autotools
    source: https://git.launchpad.net/ubuntu/+source/plymouth
    source-type: git
    source-branch: applied/ubuntu/focal-updates
    build-packages:
      - libdrm-dev
      - libgtk-3-dev
      - libpng-dev
      - libudev-dev
      - pkg-config
      - systemd
    stage-packages:
      - fonts-ubuntu
      - libdrm2
      - libgraphite2-3
      - libpng16-16
    autotools-configure-parameters:
      # Try to use same options as the deb package
      - --disable-silent-rules
      - --libdir=/usr/lib/$SNAPCRAFT_ARCH_TRIPLET
      - --prefix=/usr
      - --localstatedir=/var
      - --enable-pango
      - --enable-systemd-integration
      - --enable-tracing
      - --with-background-color=0x2c001e
      - --with-background-start-color-stop=0x2c001e
      - --with-background-end-color-stop=0x2c001e
      - --with-logo=/usr/share/plymouth/ubuntu-logo.png
      - --with-release-file=/etc/os-release
      - --with-system-root-install
      - --without-rhgb-compat-link
      # Use compiled pango static libraries
      - LDFLAGS=-L$SNAPCRAFT_STAGE/usr/local/lib/$SNAPCRAFT_ARCH_TRIPLET
    override-build: |
      set -ex
      # Apply UC-specific patches, then build
      git config user.email "snapcraft@canonical.com"
      git config user.name "snapcraft"
      git am "$SNAPCRAFT_PROJECT_DIR"/plymouth-patch/*.patch
      snapcraftctl build
      # Deactivate/remove bits unneeded or replaced by config part
      service_d="$SNAPCRAFT_PART_INSTALL"/lib/systemd/system
      rm "$service_d"/sysinit.target.wants/plymouth-read-write.service \
         "$service_d"/kexec.target.wants/plymouth-kexec.service \
         "$service_d"/initrd-switch-root.target.wants/plymouth-switch-root.service \
         "$service_d"/initrd-switch-root.target.wants/plymouth-start.service \
         "$service_d"/plymouth-start.service \
         "$service_d"/plymouth-quit.service \
         "$service_d"/plymouth-quit-wait.service \
         "$service_d"/plymouth-read-write.service \
         "$service_d"/plymouth-switch-root.service \
         "$service_d"/plymouth-kexec.service \
         "$service_d"/systemd-ask-password-plymouth.*
      # Ignore serial in all calls to plymouthd
      sed -i 's#/sbin/plymouthd#/sbin/plymouthd --ignore-serial-consoles#' \
          "$service_d"/plymouth-poweroff.service \
          "$service_d"/plymouth-reboot.service \
          "$service_d"/plymouth-halt.service
      # Set UC as the default plymouth theme
      ln -sf ubuntu-core/ubuntu-core.plymouth \
          "$SNAPCRAFT_PART_INSTALL"/usr/share/plymouth/themes/default.plymouth
      # Strip binaries
      find "$SNAPCRAFT_PART_INSTALL"/ -executable -type f | xargs file -Ni |
          grep 'application/x-executable\|application/x-sharedlib' | cut -d: -f1 | xargs strip
    organize:
      bin: usr/bin
      sbin: usr/sbin
      lib: usr/lib
    stage:
      - -usr/share/plymouth/plymouthd.defaults
    prime:
      - usr/bin/plymouth
      - usr/sbin/plymouthd
      - usr/lib/systemd/system/
      - usr/lib/*/libply-splash-core.so*
      - usr/lib/*/libply.so*
      - usr/lib/*/libply-splash-graphics.so*
      - usr/lib/*/plymouth/details.so
      - usr/lib/*/plymouth/script.so
      - usr/lib/*/plymouth/text.so
      - usr/lib/*/plymouth/renderers/drm.so
      - usr/lib/*/plymouth/renderers/frame-buffer.so
      - usr/share/plymouth/themes/details/
      - usr/share/plymouth/themes/text/
      - usr/share/plymouth/themes/default.plymouth
      - usr/share/fonts/truetype/ubuntu/Ubuntu-R.ttf
      - usr/share/doc/fonts-ubuntu/
      - usr/share/doc/libdrm2/
      - usr/share/doc/libgraphite2*/
      - usr/share/doc/libpng16*/
      # Dependencies
      - usr/lib/*/libdrm.so*
      - usr/lib/*/libpng16.so*
      - usr/lib/*/libgraphite2.so*

  core-theme:
    plugin: dump
    source: themes
    organize:
      ubuntu-core: usr/share/plymouth/themes/ubuntu-core

  config:
    plugin: dump
    source: config
